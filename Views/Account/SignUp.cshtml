@model MVCSampleProject.Models.Account

@{
    Layout = null;
}
@ViewBag.Message
@TempData["ErrorMessage"]

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SignUp</title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" type="text/css" />
    <script src="https://kit.fontawesome.com/6f16284e08.js" crossorigin="anonymous"></script>
    <script src="~/Scripts/jquery-3.6.3.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
</head>
<body>
    <div class="account_form" >
        <div style="text-align: center;">
            <h1>Sign Up</h1>
        </div>
        @using (Html.BeginForm("SignUp", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="form_group">
                @* Username *@
                <div class="col-xl-3 m-auto mt-1">
                    <div class="d-flex">
                        @Html.LabelFor(m => m.UserName, htmlAttributes: new { @class = "fw-bold" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "badge badge-success text-danger" })
                    </div>
                    @Html.TextBoxFor(m => m.UserName, "", new { @class = "form-control", @placeholder = "Username" })
                    
                </div>

                @* Full Name *@
                <div class="col-xl-3 m-auto mt-1">
                    @Html.LabelFor(m => m.FullName, htmlAttributes: new { @class = "fw-bold" })
                    @Html.TextBoxFor(m => m.FullName, "", new { @class = "form-control", @placeholder = "Full name" })
                    @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "badge badge-danger text-danger" })
                </div>

                <div class="col-xl-3 m-auto mt-1">
                    @Html.LabelFor(m => m.Avatar, htmlAttributes: new { @class = "fw-bold" })
                    @Html.TextBoxFor(m => m.Avatar, "", new { @class = "form-control", @placeholder = "Avatar url" })
                    @Html.ValidationMessageFor(m => m.Avatar, "", new { @class = "badge badge-danger text-danger" })
                </div>

                @* Password *@
                <div class="col-xl-3 m-auto mt-1">
                    <div class="d-flex">
                        <label class="fw-bold">Password</label>
                        @Html.ValidationMessageFor(m => m.UserPassword, "", new { @class = "badge badge-danger text-danger" })
                    </div>
                    @Html.PasswordFor(m => m.UserPassword, new { @class = "form-control", @placeholder = "Password" })
                </div>


                @* Role *@
                @*<div class="col-xl-3 m-auto mt-1">
                    @Html.LabelFor(m => m.UserRole)
                    @Html.PasswordFor(m => m.UserRole, new { @class = "form-control", @placeholder = "Role" })
                    @Html.ValidationMessageFor(m => m.UserRole, "", new { @class = "badge badge-danger" })
                </div>*@

                <div class="col-xl-3 m-auto mt-1">
                    <div class="d-flex">
                        <label class="fw-bold">Email</label>
                        @Html.ValidationMessageFor(m=>m.email, "", new { @class = "badge badge-danger text-danger"})
                    </div>
                    @Html.TextBoxFor(m => m.email, "", new { @class = "form-control", @placeholder = "Email" })
                </div>

                <div class="col-xl-3 m-auto mt-1">
                    <div class="d-flex">
                        <label class="fw-bold">Phone number</label>
                        @Html.ValidationMessageFor(m => m.phone, "", new { @class = "badge badge-danger text-danger" })
                    </div>
                    @Html.TextBoxFor(m => m.phone, "", new { @type = "number", @class = "form-control", @placeholder = "Phone number" })
                </div>

                @* Full Name *@
                <div class="col-xl-3 m-auto mt-1">
                    @Html.LabelFor(m => m.ShippingAddress, htmlAttributes: new { @class = "fw-bold" })
                    @Html.TextBoxFor(m => m.ShippingAddress, "", new { @class = "form-control", @placeholder = "Address" })
                    @Html.ValidationMessageFor(m => m.ShippingAddress, "", new { @class = "badge badge-danger text-danger" })
                </div>

                <div class="col-xl-3 m-auto mt-1">
                    @Html.LabelFor(model => model.RoleID, "Role", htmlAttributes: new { @class = "control-label col-md-2 fw-bold" })
                    <div class="col-md-10">
                        @Html.DropDownList("RoleID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger text-danger" })
                    </div>
                </div>

                <div class="form-group mt-5" style="text-align: center;">
                    <input type="submit" name="submit" class="btn btn-danger" value="Sign Up" />
                </div>
            </div>
        }
        <div class="form-group mt-1" style="text-align: center;">
            Have an account already?
            @Html.ActionLink("Login now", "Login")
            <br />
            Or you can sign up with:
            <button type="button" class="btn btn-link" onclick="location.href='@Url.Action("FacebookLogin", "Account")'">
                <i class="fa-brands fa-facebook" style="font-size:25px;"></i>
            </button>
            <button type="button" class="btn btn-link" onclick="location.href='@Url.Action("GoogleLogin", "Account")'">
                <i class="fa-brands fa-google text-danger" style="font-size:25px;"></i>
            </button>
        </div>
    </div>

</body>
</html>
